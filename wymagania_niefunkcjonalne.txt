3.1 Usability
[Describe requirements for qualities such as easy of use, easy of learning, usability standards and localization.]
FEAT 1 (<<non-functional>>) - System ma interfejs zgodny z normą X.
FEAT 2 (<<non-functional>>) - System musi zapewnić polskojęzyczny interfejs z użytkownikiem.
FEAT 3 (<<non-functional>>) - System nie wymaga przeprowadzenia wśród użytkowników szkoleń celem nauki obsługi systemu.
FEAT 4 (<<non-functional>>) - System jest przeznaczony dla osób pełnoletnich.
FEAT 5 (<<non-functional>>) - System musi posiadać "Pomoc" dla użytkownika.

3.2 Reliability
[Reliability includes the product and/or system's ability to keep running under stress and adverse conditions. Specify requirements for reliability acceptance levels, and how they will be measured and evaluated. Suggested topics are availability, frequency of severity of failures and recoverability.]
FEAT 1 (<<non-functional>>) - System jest oparty o relacyjną bazę danych, z którą komunikuje się oprogramowanie przez sterownik JDBC, co zapewnia wydajność rozwiązania.
FEAT 2 (<<non-functional>>) - System musi zapewnić bezpieczeństwo danych, poprzez szyfrowanie danych wrażliwych.
FEAT 3 (<<non-functional>>) - System zapewnia komunikację użytkownika z systemem wyrażoną za pomocą standardowego zestawu znaków ASCII z standardem kodowania polskich liter ISO 8859-2.
FEAT 4 (<<non-functional>>) - System musi być napisany w Javie.
FEAT 5 (<<non-functional>>) - Bezpieczeństwo systemu ma zapewnić korzystanie z protokołu HTTPS.
FEAT 6 (<<non-functional>>) - System musi zapewnić skalowalność i możliwość skalowania pionowego (maszyny wieloprocesorowe).
FEAT 7 (<<non-functional>>) - System musi zapewnić skalowalność i możliwość skalowania poziomego (farmy serwerów).
FEAT 8 (<<non-functional>>) - System musi zapewnić skalowanie, rekonfigurację, osadzanie nowych usług bez zakłócania pracy aplikacji.
FEAT 9 (<<non-functional>>) - Architektura systemu musi mieć budowę trójwarstwową (serwer bazy danych, serwer aplikacyjny, aplikacja użytkownika).
FEAT 10 (<<non-functional>>) - System musi działać w oparciu o architekturę rozproszoną (separacja bazy danych i serwera aplikacji).


3.3 Performance
[The performance characteristics of the system should be outlined in this section. Examples are response time, throughput, capacity and startup or shutdown times.]
FEAT 1 (<<non-functional>>) - System zwraca wyniki wyszukiwania w czasie nie dłuższym, niż 5 sekund.
FEAT 2 (<<non-functional>>) - System musi zapewniać dostępność ciągłą w systemie 24 godziny dziennie, 7 dni w tygodniu, za wyjątkiem czasu awarii.
FEAT 3 (<<non-functional>>) - System musi się uruchomić w czasie nie dłuższym niż 5 sekund.
FEAT 4 (<<non-functional>>) - System powinien móc obsługiwać 1000 użytkowników jednocześnie.
FEAT 5 (<<non-functional>>) - Czas trwania zamknięcia systemu nie powinien przekroczyć 1 sekudy.

3.4 Supportability
[This section indicates any requirements that will enhance the supportability or maintainability of the system being built, including adaptability and upgrading, compatibility, configurability, scalability and requirements regarding system installation, level of support and maintenance.]
FEAT 1 (<<non-functional>>) - System jest dostępny w typowych przeglądarkach internetowych (Chrome, InternetExplorer, Firefox, Safari).
FEAT 2 (<<non-functional>>) - System musi zapewnić zarządzanie prawami dostępu użytkowników do zasobów w oparciu o mechanizm ról systemowych.
FEAT 3 (<<non-functional>>) - System musi posiadać rozbudowany system uprawnień do danych (użytkownik widzi wyłącznie określone dane do których dostał uprawnienia dzieki przypisaniu do roli).
FEAT 4 (<<non-functional>>) - System musi umożliwić przywrócenie stanu sprzed awarii.
FEAT 5 (<<non-functional>>) - System musi działać na systemach: Windows, Linux i z rodziny Ubuntu.
FEAT 6 (<<non-functional>>) - System musi być pokryty testami jednostkowymi na poziomie 80%.